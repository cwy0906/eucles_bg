continue
params[:schedule_status]
params[:schedule_id]
params
exit
continue
stop
continue
ss
continue
usd_query_rates_data.size
usd_query_mean_rate   = usd_query_rates_data.average(:spot_buying_rate)
usd_query_mean_rate   = usd_query_rates_data.average(:spot_buying_rate).round(3)
usd_query_rates_data  = historical_rate_class.where(recorded_date: usd_query_start_date..usd_query_end_date)
usd_query_start_date  = usd_query_end_date - 6.months
usd_query_end_date   = historical_rate_class.where(currency:'usd').maximum(:recorded_date)
historical_rate_class.where(currency:'usd').maximum(:recorded_date)- 6.months
historical_rate_class.where(currency:'usd').maximum(:recorded_date)
usd_query_start_date  = usd_query_end_date - 6.months
historical_rate_class.where(currency:'usd').maximum(:recorded_date)
historical_rate_class
continue
@recent_period_usd_rate_result 
BotHistoricalExchangeRate.where(currency:'usd').where(recorded_date:'2024/08/19'..'2025/02/14').average(:spot_buying_rate)
BotHistoricalExchangeRate.where(currency:'usd').where(recorded:'2024/08/19'..'2025/02/14').average(:spot_buying_rate)
BotHistoricalExchangeRate.where(currency:'usd').where(recorded:'2024/08/19'..'2025/02/14')average(:spot_buying_rate)
BotHistoricalExchangeRate.where(currency:'usd').average(:spot_buying_rate)
BotHistoricalExchangeRate.where(currency:'usd')
@recent_period_usd_rate_result[:mean_rate]
continue
contine
@recent_period_jpy_rate_result
@recent_period_usd_rate_result
@jpy_query_date
@usd_query_date
session[:option]
continue
exit
session
session[:core]
session['core']
session[:core]
@current_user
exit
session[:core]['user_id']
session[:core].user_id
session[:core][:user_id]
session[:core]
session[:core][:user_id]
continue
session[:core]
session[:option]
exit
continue
session[:core][:user_id].present?
session[:core].present?
continue
tbc_user.id_hash
session[:option]
session[:core]
session[:user_id]
session
tbc_user
exit
tbc_user
quit
controller_name
action_name
action
quit
exit
controller_name
exit
controller_name
action_name
c
request_email
request_password
tbc_user.present?
tbc_user
c
params
c
session[:common_message]
c
session[:common_message]
c
session[:common_message]
c
session[:common_message]
c
session[:common_message]
c
session[:common_message]
c
session[:common_message]
c
session[:common_message]
c
session[:common_message]
c
session[:common_message]
c
session[:common_message]
c
session[:common_message]
c
session[:common_message]
session
q
session[:common_message]
c
session[:common_message]
c
session[:common_message].present?
session[:common_message]
c
flash['notice']
flash.key?('notice')
flash.keys
flash.has_key?("notice")
flash
c
q
c
exit
i
exit
@show_users.first
@show_users.size
@show_users
